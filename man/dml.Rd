% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dml.R
\name{dml}
\alias{dml}
\alias{dml_gate}
\title{Debiased Machine Learning}
\usage{
dml(
  y,
  d,
  x,
  model = c("plm", "npm"),
  target = "ate",
  groups = NULL,
  cf.folds = 5,
  cf.reps = 1,
  ps.trim = 0.01,
  reg = "ranger",
  yreg = reg,
  dreg = reg,
  dirty.tuning = TRUE,
  save.models = FALSE,
  y.class = FALSE,
  d.class = FALSE,
  verbose = TRUE,
  warnings = FALSE
)

dml_gate(dml.fit, groups, ...)
}
\arguments{
\item{y}{\code{\link{numeric}} vector with the outcome.}

\item{d}{\code{\link{numeric}} vector with the treatment. If the treatment is binary, it needs to be encoded as as: zero = absence of treatment, one = presence of treatment.}

\item{x}{\code{\link{numeric}} vector or \code{\link{matrix}} with covariates. We suggest constructing \code{x} using \code{\link{model.matrix}}.}

\item{model}{specifies the model. Current available options are \code{plm} for a partially linear model, and \code{npm} for a fully non-parametric model.}

\item{target}{specifies the target causal quantity of interest. Current available option is \code{ate} (ATE - average treatment effect). Note that for the partially linear model with a continuous treatment the ATE also equals the average causal derivative (ACD). For the nonparametric model, the ATE is only available for binary treatments. Other options (eg., ACD for the nonparametric model, ATT) will be available soon.}

\item{groups}{a \code{\link{factor}} or \code{\link{numeric}} vector indicating group membership. Groups must be a deterministic function of \code{x}.}

\item{cf.folds}{number of cross-fitting folds. Default is \code{2}.}

\item{cf.reps}{number of cross-fitting repetitions. Default is \code{1}.}

\item{ps.trim}{trims propensity scores lower than \code{ps.trim} and greater than \code{1-ps.trim}, in order to obtain more stable estimates. This is only relevant for the case of a binary treatment.}

\item{reg}{details of the machine learning method to be used for estimating the nuisance parameters (e.g, regression functions of the treatment and the outcome). Currently, this should be specified using the same arguments as \code{\link{caret}}'s \code{\link{train}} function. The default is random forest using \code{\link{ranger}}. The default method is fast and usually works well for many applications.}

\item{yreg}{same as \code{reg}, but specifies arguments for the outcome regression alone. Default is the same value of \code{reg}.}

\item{dreg}{same as \code{reg}, but specifies arguments for the treatment regression alone. Default is the same value of \code{reg}.}

\item{dirty.tuning}{should the tuning of the machine learning method happen within each cross-fit fold ("clean"), or using all the data ("dirty")? Default is dirty tuning (\code{dirty.tuning = T}). As long as the number of choices for the tuning parameters is not too big, dirty tuning is faster and should not affect the asymptotic guarantees of DML.}

\item{save.models}{should the fitted models of each iterated be saved? Default is \code{FALSE}. Note that setting this to true could end up using a lot of memory.}

\item{y.class}{when \code{y} is binary, should the outcome regression be treated as a classification problem? Default is \code{FALSE}. Note that for DML we need the class probabilities, and regression gives us that. If you change to classification, you need to make sure the method outputs class probabilities.}

\item{d.class}{when \code{d} is binary, should the outcome regression be treated as a classification problem? Default is \code{FALSE}. Note that for DML we need the class probabilities, and regression gives us that. If you change to classification, you need to make sure the method outputs class probabilities.}

\item{verbose}{if \code{TRUE} (default) prints steps of the fitting procedure.}

\item{warning}{should \code{caret}'s warnings be printed? Default is \code{FALSE}. Note \code{caret} has many inconsistent and unnecessary warnings.}
}
\value{
An object of class \code{dml} with the results of the DML procedure. The object is a \code{\link{list}} containing:
\describe{
 \item{\code{data}}{A \code{list} with the data used.}
 \item{\code{call}}{The original call used to fit the model.}
 \item{\code{info}}{A \code{list} with general information and arguments of the DML fitting procedure.}
 \item{\code{fits}}{A \code{list} with the the predictions of each repetition.}
 \item{\code{results}}{A \code{list} with the results (influence functions and estimates) for each repetition.}
 \item{\code{coefs}}{A \code{list} with the estimates and standard errors for each repetition.}
}
}
\description{
Estimates a target parameter of interest, such as an average treatment effect (ATE), using Debiased Machine #Learning (DML).

The function \code{dml.gate} is a convenience function that adds groups to a \code{dml} object after the model is fit.
}
\examples{
# loads package
library(dml.sensemakr)

## loads data
data("pension")

# set the outcome
y <- pension$net_tfa  # net total financial assets

# set the treatment
d <- pension$e401    # 401K eligibility

# set the covariates (a matrix)
x <- model.matrix(~ -1 + age + inc  + educ+ fsize + marr + twoearn + pira + hown, data = pension)

## compute income quartiles for group ATE.
g1 <- cut(x[,"inc"], quantile(x[,"inc"], c(0, 0.25,.5,.75,1), na.rm = TRUE),
         labels = c("q1", "q2", "q3", "q4"), include.lowest = T)
# run DML (nonparametric model)
## 2 folds (change as needed)
## 1 repetition (change as needed)
dml.401k <- dml(y, d, x, model = "npm", groups = g1, cf.folds = 2, cf.reps = 1)

# summary of results with median method (default)
summary(dml.401k, combine.method = "median")

# coef median method (default)
coef(dml.401k, combine.method = "median")

# se median method (default)
se(dml.401k, combine.method = "median")

# confint median method
confint(dml.401k, combine.method = "median")

## Sensitivity Analysis

### Robustness Values
robustness_value(dml.401k, alpha = 0.05)

### Confidence Bounds
confidence_bounds(dml.401k, cf.y = 0.03, cf.d = 0.04, level = 0.95)

### Contour Plots
ovb_contour_plot(dml.401k, cf.y = 0.03, cf.d = 0.04,
                bound.label = "Max Match (3x years)")

}
\references{
Chernozhukov, V., Cinelli, C., Newey, W., Sharma A., and Syrgkanis, V. (2021). "Long Story Short: Omitted Variable Bias in Causal Machine Learning."
}
